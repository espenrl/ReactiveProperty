<Window
    x:Class="ReactivePropertySamples.WPF.Views.EventToReactiveWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:ReactivePropertySamples.WPF.Behaviors"
    xmlns:converters="clr-namespace:ReactivePropertySamples.WPF.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:ReactivePropertySamples.WPF.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:reactiveProperty="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
    xmlns:viewModels="clr-namespace:ReactivePropertySamples.ViewModels;assembly=ReactivePropertySamples.Shared"
    Title="EventToReactiveWindow"
    Width="800"
    Height="450"
    mc:Ignorable="d">
    <interactivity:Interaction.Behaviors>
        <behaviors:DisposeViewModelWhenClosedBehavior />
    </interactivity:Interaction.Behaviors>
    <Window.DataContext>
        <viewModels:EventToReactiveViewModel />
    </Window.DataContext>
    <StackPanel Margin="10">
        <Label Content="EventToReactiveProperty:" Style="{StaticResource TitleLabel}" />
        <TextBlock>
            <Run Text="Mouse position: " />
            <Run Text="{Binding MousePosition.Value}" />
        </TextBlock>
        <Border
            Height="100"
            Background="LightGoldenrodYellow"
            BorderBrush="DarkRed"
            BorderThickness="1">
            <interactivity:Interaction.Triggers>
                <interactivity:EventTrigger EventName="MouseMove">
                    <reactiveProperty:EventToReactiveProperty ReactiveProperty="{Binding MousePosition}">
                        <converters:MouseEventConverter />
                    </reactiveProperty:EventToReactiveProperty>
                </interactivity:EventTrigger>
            </interactivity:Interaction.Triggers>
        </Border>
        <Label Content="EventToReactiveCommand:" Style="{StaticResource TitleLabel}" />
        <CheckBox Content="CanExecute" IsChecked="{Binding CanExecute.Value, Mode=TwoWay}" />
        <Button Content="Open file">
            <interactivity:Interaction.Triggers>
                <interactivity:EventTrigger EventName="Click">
                    <reactiveProperty:EventToReactiveCommand Command="{Binding OpenFileCommand}">
                        <converters:OpenFileConverter />
                    </reactiveProperty:EventToReactiveCommand>
                </interactivity:EventTrigger>
            </interactivity:Interaction.Triggers>
        </Button>
        <TextBlock Text="{Binding OpenedFile.Value}" />
    </StackPanel>
</Window>
