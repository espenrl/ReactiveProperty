<Window x:Class="ReactivePropertyCoreSample.WPF.Views.ReactiveCommandWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ReactivePropertyCoreSample.WPF.Views"
        xmlns:viewModels="clr-namespace:ReactivePropertyCoreSample.WPF.ViewModels"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:behaviors="clr-namespace:ReactivePropertyCoreSample.WPF.Behaviors"
        mc:Ignorable="d"
        Style="{StaticResource WindowStyle}"
        Title="ReactiveCommandWindow" Height="1000" Width="800">
    <i:Interaction.Behaviors>
        <behaviors:DisposeViewModelWhenClosedBehavior />
    </i:Interaction.Behaviors>
    <Window.DataContext>
        <viewModels:ReactiveCommandViewModel />
    </Window.DataContext>
    <StackPanel Margin="10">
        <Label Content="ReactiveCommand:" Style="{StaticResource TitleLabel}" />
        <Label Content="Create and subscribe:" />
        <Button Content="Click me" Command="{Binding CreateAndSubscribeCommand}" />
        <TextBlock Text="{Binding InvokedDateTime.Value}" Margin="5, 0" />
        <TextBlock Text="{Binding InvokedDateTimeFromCommand.Value}" Margin="5, 0" />

        <Label Content="Create from IObservable&lt;bool&gt;:" />
        <CheckBox Content="Command's canExecute status"
                  IsChecked="{Binding IsChecked.Value, Mode=TwoWay}" />
        <Button Content="Command created from IObservable&lt;bool&gt;" 
                Command="{Binding CreateFromIObservableBoolCommand}" />
        <TextBlock Text="{Binding InvokedDateTimeForCreateFromIObservableBoolCommand.Value}" />

        <Label Content="ReactiveCommand with parameter:" />
        <StackPanel Orientation="Horizontal">
            <Label Content="Parameter:" />
            <TextBox x:Name="textBoxParameter" MinWidth="150" Text="parameter value" />
        </StackPanel>
        <Button Content="ReactiveCommand with parameter"
                Command="{Binding ReactiveCommandWithParameter}" 
                CommandParameter="{Binding Text, ElementName=textBoxParameter}"/>
        <TextBlock Text="{Binding ReactiveCommandWithParameterOutput.Value}" />

        <Label Content="AsyncReactiveCommand basic usage:" />
        <Label Content="AsyncReactiveCommand:" Style="{StaticResource TitleLabel}" />
        <Button Content="AsyncReactiveCommand"
                Command="{Binding LongRunningCommand}" />
        <TextBlock Text="{Binding LongRunningCommandOutput.Value}" />

        <Label Content="Create from IObservable&lt;bool&gt;:" />
        <CheckBox Content="Command's canExecute status"
                  IsChecked="{Binding IsCheckedForAsyncReactiveCommand.Value, Mode=TwoWay}" />
        <Button Content="Command created from IObservable&lt;bool&gt;" 
                Command="{Binding CreateFromIObservableBoolAsyncReactiveCommand}" />
        <TextBlock Text="{Binding CreateFromIObservableBoolAsyncReactiveCommandOutput.Value}" />

        <Label Content="Share CanExecute status:" />
        <CheckBox Content="CanExecute status" 
                  IsChecked="{Binding IsCheckedForSharedStatus.Value, Mode=TwoWay}" />
        <Button Content="A command" Command="{Binding ACommand}" />
        <Button Content="B command" Command="{Binding BCommand}" />
        <TextBlock Text="{Binding SharedStatusOutput.Value}" />
    </StackPanel>
</Window>
