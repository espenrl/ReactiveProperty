@using Reactive.Bindings.Components
@page "/"
@inject IndexViewModel _viewModel

<h3>ReactivePropertiesValidator sample</h3>

<EditForm Model="_viewModel" OnInvalidSubmit="InvalidSubmit" OnValidSubmit="ValidSubmit">
    <ReactivePropertiesValidator />

    <ValidationSummary />

    <div class="mb-3">
        <label for="firstName">First name</label>
        <InputText @bind-Value="_viewModel.FirstName.Value" class="form-control" />
        <ValidationMessage For="() => _viewModel.FirstName.Value" />
    </div>
    <div class="mb-3">
        <label for="firstName">Last name</label>
        <InputText @bind-Value="_viewModel.LastName.Value" class="form-control" />
        <ValidationMessage For="() => _viewModel.LastName.Value" />
    </div>

    <div class="mb-3">
        <span>Full name: @_viewModel.FullName.Value</span>
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@if (!string.IsNullOrEmpty(_message))
{
    <div class="alert alert-primary">
        <span>@_message</span>
    </div>
}

@code {
    private string? _message;

    private void InvalidSubmit(EditContext context)
    {
        _message = "InvalidSubmit was invoked.";
    }

    private void ValidSubmit(EditContext context)
    {
        _message = "ValidSubmit was invoked.";
    }
}
